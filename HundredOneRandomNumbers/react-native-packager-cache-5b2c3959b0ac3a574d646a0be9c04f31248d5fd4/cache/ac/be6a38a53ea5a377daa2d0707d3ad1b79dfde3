Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/george/workspace/gwmoura/HundredOneRandomNumbers/HundredOneRandomNumbers/components/RandomNumbers/RandomNumber.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  RandomNumber: {
    displayName: 'RandomNumber'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/george/workspace/gwmoura/HundredOneRandomNumbers/HundredOneRandomNumbers/components/RandomNumbers/RandomNumber.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var RandomNumber = _wrapComponent('RandomNumber')(function (_React$Component) {
  _inherits(RandomNumber, _React$Component);

  function RandomNumber(props) {
    _classCallCheck(this, RandomNumber);

    var _this = _possibleConstructorReturn(this, (RandomNumber.__proto__ || Object.getPrototypeOf(RandomNumber)).call(this, props));

    _this.state = { number: 0 };

    setTimeout(function () {
      _this.getNumber();
    }, 3000);
    return _this;
  }

  _createClass(RandomNumber, [{
    key: 'getNumber',
    value: function getNumber() {
      var number = Math.floor(Math.random() * 101);
      this.setState({ number: number });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 20
          }
        },
        _react3.default.createElement(
          _reactNative.Text,
          { style: styles.numberText, __source: {
              fileName: _jsxFileName,
              lineNumber: 21
            }
          },
          this.state.number
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.buttonContainer, __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          _react3.default.createElement(_reactNative.Button, {
            onPress: function onPress() {
              return _this2.getNumber();
            },
            title: 'Novo N\xFAmero',
            color: '#841584',
            __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          })
        )
      );
    }
  }]);

  return RandomNumber;
}(_react3.default.Component));

exports.default = RandomNumber;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  },
  numberText: {
    fontSize: 40,
    paddingBottom: 20
  },
  buttonContainer: {
    margin: 20
  }
});